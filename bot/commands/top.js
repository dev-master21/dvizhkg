import { pool } from '../services/database.js';

export const topCommand = async (ctx) => {
  try {
    const [rows] = await pool.execute(
      `SELECT telegram_id, username, first_name, last_name, reputation
       FROM users 
       WHERE reputation > 0 AND is_blocked = FALSE
       ORDER BY reputation DESC 
       LIMIT 20`
    );
    
    if (rows.length === 0) {
      return ctx.reply('üìä –ü–æ–∫–∞ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–µ–ø—É—Ç–∞—Ü–∏–µ–π!');
    }
    
    let message = 'üèÜ *–¢–û–ü-20 –î–í–ò–ñ–ù–Ø–ö–û–í* üèÜ\n\n';
    
    rows.forEach((user, index) => {
      const medal = index === 0 ? 'ü•á' : 
                   index === 1 ? 'ü•à' : 
                   index === 2 ? 'ü•â' : 
                   `${index + 1}.`;
      
      const name = user.first_name || user.username || '–ê–Ω–æ–Ω–∏–º–Ω—ã–π –¥–≤–∏–∂–Ω—è–∫';
      message += `${medal} ${name} ‚Äî *${user.reputation}* —Ä–µ–ø.\n`;
    });
    
    message += `\nüí™ –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!\n`;
    message += `üåê –í–µ—Å—å —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∞ —Å–∞–π—Ç–µ: ${process.env.SITE_URL}`;
    
    ctx.replyWithMarkdown(message);
  } catch (error) {
    console.error('Top command error:', error);
    ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–ø–∞');
  }
};